apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata: 
 name: read-secrets-global
subjects: 
 - kind: User
   name: jane-cluster-admin
   apiGroup: rbac.authorization.k8s.io
roleRef:
 kind: ClusterRole
 name: cluster-admin
 apiGroup: rbac.authorization.k8s.io 

...

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata: 
 name: read-secrets-global
subjects: 
 - kind: Group
   name: cluster-admins
   apiGroup: rbac.authorization.k8s.io
roleRef:
 kind: ClusterRole
 name: cluster-admin
 apiGroup: rbac.authorization.k8s.io   

...
For the default service account in the "kube-system":
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: serviceaccount-read-secrets-global
subjects:
- kind: ServiceAccount
  name: default
  namespace: kube-system 
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

...
For a service account in the "qa" namespace:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-serviceaccount-cluster-binding 
subjects:
- kind: ServiceAccount
  name: my-serviceaccount
  namespace: qa
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

...
For all service accounts in the "qa" namespace:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-serviceaccounts-cluster-binding 
subjects:
- kind: Group
  name: my-serviceaccounts
  namespace: qa
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io