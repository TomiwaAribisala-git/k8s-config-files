apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
 name: xxx-ingress
spec:
 rules:
  - host: [myapp.com]
    http:
     paths:
      - backend:
         serviceName: xxx-internal-service
         servicePort: [8080]

# path based routing
...
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
 name: simple-fanout-example
 annotations:
  nginx.ingress.kubernetes.io/rewrite-target: /
spec:
 rules:
  - host: myapp.com
    http:
     paths:
      - path: /analytics
        backend:
          serviceName: analytics-service
          servicePort: 3000
      - path: /shopping
        backend:
          serviceName: shopping-service
          servicePort: 8080

# host based routing
...
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
 name: simple-fanout-example
spec:
 rules:
  - host: analytics.myapp.com
    http:
     paths:
      backend:
       serviceName: analytics-service
       servicePort: 3000
  - host: shopping.myapp.com
    http:
     paths:
      backend:
       serviceName: shopping-service
       servicePort: 8080

...
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
 name: tls-example-ingress
spec:
 tls:
  - host: myapp.com  
    secretName: myapp-secret-tls 
 rules:
  - host: myapp.com
    http:
     paths:
      backend:
      serviceName: myapp-internal-service
      servicePort: 8080

...
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
 name: myapp-secret-tls
 namespace: default
data:
 tls.crt: base64 encoded cert
 tls.key: base64 encoded key
type: kubernetes.io/tls